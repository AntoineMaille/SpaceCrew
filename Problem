public ArrayList<Vaisseau> createFlotte(){
		ArrayList<Vaisseau> flotte = new ArrayList<Vaisseau>();
		int xCroiseur, yCroiseur, xChasseur, yChasseur, xDestroyer, yDestroyer, xEclaireur, yEclaireur;
		System.out.println(this.numero);
		switch(this.numero) {
		case 1: xCroiseur = 0; yCroiseur = 2;
		xChasseur = 2; yChasseur = 0; 
		xDestroyer = 2; yDestroyer = 1; 
		xEclaireur = 1; yEclaireur = 2;
		break;
		case 2: xCroiseur = Map.getLength() - 1; yCroiseur = Map.getLength() - 3;
		xChasseur = Map.getLength() - 3; yChasseur = Map.getLength() - 1; 
		xDestroyer = Map.getLength() - 3; yDestroyer = Map.getLength() - 2; 
		xEclaireur = Map.getLength() - 2; yEclaireur = Map.getLength() - 3;
		break;
		case 3: xCroiseur = 0; yCroiseur = Map.getLength() - 3;
		xChasseur = 1; yChasseur = Map.getLength() - 3; 
		xDestroyer = 2; yDestroyer = Map.getLength() - 1; 
		xEclaireur = 2; yEclaireur = Map.getLength() - 2;
		break;
		case 4: xCroiseur = Map.getLength() - 3; yCroiseur = 0;
		xChasseur = Map.getLength() - 3; yChasseur = 1; 
		xDestroyer = Map.getLength() - 1; yDestroyer = 2; 
		xEclaireur = Map.getLength() - 2; yEclaireur = 2;
		break;
		default : System.out.println("default");
		xCroiseur = 0; yCroiseur = 0;
		xChasseur = 0; yChasseur = 0; 
		xDestroyer = 0; yDestroyer = 0; 
		xEclaireur = 0; yEclaireur = 0;
		break;
		}
		flotte.add((new Vaisseau(VaisseauType.CROISEUR,xCroiseur,yCroiseur)));
		flotte.add((new Vaisseau(VaisseauType.CHASSEUR,xChasseur,yChasseur)));
		flotte.add((new Vaisseau(VaisseauType.DESTROYER,xDestroyer,yDestroyer)));
		flotte.add((new Vaisseau(VaisseauType.ECLAIREUR,xEclaireur,yEclaireur)));
		return flotte;
	}



while(!joueursList.isFinish()) {
			for(turn=0;turn<joueurList.size();turn++) {
				System.out.println("Le joueur "+turn+" à la main, déplaces toi en écrivant N ");
				for (int i =0; i <joueurList.get(turn).flotte.size(); i++) {
			while(map.flotte1.get(i).getMovementPointLeft() > 0) {
				Scanner in = new Scanner(System.in);
				Direction d;
				String test = in.nextLine();
				if (test.equalsIgnoreCase("n")) {
					d = Direction.NORD;
					if(Entiti(map.flotte1.get(i).getPosition(), d)) {
						System.out.println("Marche plus!");
					} else {
						map.flotte1.get(i).move(d);
						System.out.println(map);
					}
				}else if (test.equalsIgnoreCase("s")) {
					d = Direction.SUD;
					if(Entiti(map.flotte1.get(i).getPosition(), d)) {
						System.out.println("Marche plus!");
					} else {
						map.flotte1.get(i).move(d);
						System.out.println(map);
					}
				}else if (test.equalsIgnoreCase("e")) {
					d = Direction.EST;
					if(Entiti(map.flotte1.get(i).getPosition(), d)) {
						System.out.println("Marche plus!");
					} else {
						map.flotte1.get(i).move(d);
						System.out.println(map);
					}
				}else if (test.equalsIgnoreCase("o")) {
					d = Direction.OUEST;
					if(Entiti(map.flotte1.get(i).getPosition(), d)) {
						System.out.println("Marche plus!");
					} else {
						map.flotte1.get(i).move(d);
						System.out.println(map);
					}
				}
		
			}
		}
	}
	
	public static boolean Entiti(Coordinates c, Direction d) {
		int abs = 0;
		int ord = 0;
		if (d == Direction.NORD) {
			ord = -1;
		} else if (d == Direction.SUD) {
			ord = 1;
		} else if (d == Direction.OUEST) {
			abs = -1;
		} else if (d == Direction.EST){
			abs = 1;
		}
		if (c.getX()+ord < 0 || c.getX() + ord > 19 || c.getY()+abs < 0 || c.getY()+abs >19) {
			System.out.println("Bordure de map");
			return false;
		}
		if ( map[c.getX()+ord][c.getY()+abs] != null) {
			return true;
		}
		return false;
	}